# Configuration file for generate-pages.py script
# Hugo Auto Window Stickers Page Generation Settings
#
# ⚙️ RELATED SETTINGS:
# - GitHub Actions cron schedule: .github/workflows/scheduled-build.yml (line 43)
#   Current: "*/30 * * * *" (every 30 minutes for testing)
#   Production: "0 6 * * *" (daily at 6 AM UTC)

# Script execution settings
execution:
  # Random seed for reproducible generation (null for random)
  seed: 42
  
  # Maximum number of pages to generate (null for unlimited)
  # 🧪 TEST: Generate 10 articles for scheduled publishing test
  # For products: set to 60 or null
  limit: 10
  
  # Dry run mode - show what would be generated without creating files
  dry_run: false
  
  # Base path to Hugo site directory
  base_path: "."
  
  # Output directory for generated pages (relative to base_path)
  output_dir: "content"

# Content generation settings
content:
  # Number of items to select from each content pool
  savings_count: 1
  benefits_count: 6
  faq_count: 10
  testimonials_count: 3
  
  # Default saving number if not found in product data
  default_saving_number: "3500"

# SEO and keyword settings
seo:
  # Use keywords-seotitle.yaml for SEO titles only
  seo_keywords_file: "data/content-generator/keywords-seotitle.yaml"
  
  # Use keywords.yaml for content placeholder substitutions
  content_keywords_file: "data/content-generator/keywords.yaml"
  
  # SEO title template: {product_title} — {keyword} {state}
  title_template: "{product_title} — {keyword} {state}"

# Data source files
data_sources:
  products_dir: "data/products"
  states_file: "data/content-generator/states.yaml"
  content_pools_dir: "data/content-generator/content/product"

# Page generation settings
pages:
  # Layout to use for generated pages
  layout: "product"
  
  # Directory pattern: states/{state_slug}-{product_key}/index.md
  # Full path will be: content/<filename_pattern>
  # Placeholders: {state_slug}, {state_name}, {state}, {product_key}, {product_slug}, {product_title}
  filename_pattern: "states/{state_slug}-{product_key}/index.md"
  
  # Include generated timestamp in front matter
  include_timestamp: true
  
  # Add generation comment to markdown files
  add_generation_comment: true

# Article generation settings (for future use)
articles:
  # Layout to use for generated articles
  layout: "article"
  
  # Directory pattern: articles/{product_slug}-{article_slug}/index.md
  # Full path will be: content/<filename_pattern>
  # Placeholders: {product_slug}, {product_title}, {product_key}, {article_slug}, {article_title}, {article_name}
  filename_pattern: "articles/{product_slug}-{article_slug}/index.md"
  
  # Article content pools directory
  content_pools_dir: "data/content-generator/content/article"

# Logging and output settings
logging:
  # Show progress every N pages
  progress_interval: 50
  
  # Verbose output
  verbose: false
  
  # Log file path (null to disable file logging)
  log_file: null

# Advanced settings
advanced:
  # Skip products with missing required fields
  skip_invalid_products: true
  
  # Required product fields for generation
  required_product_fields:
    - "title"
    - "description"
    - "saving_number"
  
  # Placeholder patterns to replace in content
  placeholders:
    product: "[[product]]"
    state: "[[state]]"
    keyword: "[[keyword]]"
    saving_number: "[[saving_number]]"
  
  # File encoding for reading/writing
  file_encoding: "utf-8"
  
  # YAML dump settings
  yaml_settings:
    default_flow_style: false
    allow_unicode: true
    sort_keys: false
    indent: 2

# Quality control settings
quality:
  # Minimum content length for generated text blocks
  min_content_length: 10
  
  # Maximum content length for generated text blocks
  max_content_length: 8000
  
  # Validate generated YAML front matter
  validate_yaml: true
  
  # Check for placeholder substitution completeness
  check_placeholders: true

# Scheduling defaults for generated content
# Hugo behavior:
# - publishDate: Controls when page becomes visible (requires --buildFuture to preview)
# - date: Used for sorting and display, but doesn't affect visibility
# - buildFuture: false (production) = hides pages with future publishDate
# - buildFuture: true (development) = shows all pages regardless of publishDate
#
# 📅 COORDINATION WITH GITHUB ACTIONS:
# - GitHub Actions cron (.github/workflows/scheduled-build.yml) triggers Netlify builds
# - Recommended: Set cron interval >= publish_delay_minutes for smooth rollout
# - Example: publish_delay_minutes=30 → cron="*/30 * * * *" or "0 */1 * * *"
scheduling:
  # Base timestamp for scheduling (ISO 8601 format with timezone)
  # 🧪 TEST: Start time for 10 test articles (moved to past for immediate visibility)
  # Starting at 05:00 UTC (06:00 local time +01:00)
  # With 15min intervals: 10 articles will be published over 2.5 hours
  start_timestamp: "2025-10-05T05:00:00+00:00"
  
  # Delay in minutes between each published page (0 = publish immediately)
  # 🧪 TEST: 15 minutes = 10 articles in 2.5 hours
  # For products: use 30 minutes
  publish_delay_minutes: 10
  
  # Offset in minutes between publishDate and date fields
  # Usually 0 (both fields get same timestamp)
  # Negative value = date is earlier than publishDate
  content_date_offset_minutes: 0
  
  # Apply scheduling to articles (true = use delayed publishing)
  # 🧪 TEST: Enabled for testing scheduled article publishing
  apply_to_articles: true
  
  # Apply scheduling to product pages
  # 🧪 TEST PHASE 1: true = enable scheduled publishing for testing
  # Keep true for PHASE 2 to continue gradual rollout
  apply_to_products: true
